{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7d16f80a",
   "metadata": {},
   "source": [
    "### 3.2. Ejercicios\n",
    "\n",
    "En esta sección se dejarán algunos ejercicios para ustedes. Si alcanza el tiempo, se harán en clase."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf94f959",
   "metadata": {},
   "source": [
    "**Ejercicio 1.** A partir del análisis de un asesor financiero, se obtuvieron los siguientes datos de rendimientos de activos de cómputo y de telecomunicaciones, relativos a posibles situaciones económicas futuras"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b90f7c2d",
   "metadata": {},
   "source": [
    "| Condición  económica | Rendimiento activo de cómputo | Rendimiento activo telecomunicaciones | Probabilidad |\n",
    "| -------------------- | ----------------------------- | ------------------------------------- | ------------ |\n",
    "| Declive              | -0.04                         | 0.07                                  | 0.2          |\n",
    "| Estable              | 0.02                          | 0.04                                  | 0.5          |\n",
    "| Mejora               | 0.10                          | 0.03                                  | 0.3          |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50cca174",
   "metadata": {},
   "source": [
    "Calcular, para cada activo, su rendimiento esperado y volatilidad."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "14622024",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4b7e1d95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rendimiento de cómputo</th>\n",
       "      <th>Rendimiento activo telecomunicaciones</th>\n",
       "      <th>Probabilidad</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Condición económica</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Declive</th>\n",
       "      <td>-0.04</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Estable</th>\n",
       "      <td>0.02</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mejora</th>\n",
       "      <td>0.10</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Rendimiento de cómputo  \\\n",
       "Condición económica                           \n",
       "Declive                               -0.04   \n",
       "Estable                                0.02   \n",
       "Mejora                                 0.10   \n",
       "\n",
       "                     Rendimiento activo telecomunicaciones  Probabilidad  \n",
       "Condición económica                                                       \n",
       "Declive                                               0.07           0.2  \n",
       "Estable                                               0.04           0.5  \n",
       "Mejora                                                0.03           0.3  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tabla = pd.DataFrame(columns=['Rendimiento de cómputo', 'Rendimiento activo telecomunicaciones', 'Probabilidad'], index=['Declive', 'Estable', 'Mejora'])\n",
    "tabla.index.name = 'Condición económica'\n",
    "tabla['Rendimiento de cómputo']=[-0.04, 0.02, 0.1]\n",
    "tabla['Rendimiento activo telecomunicaciones']=[0.07, 0.04, 0.03]\n",
    "tabla['Probabilidad']=[0.2, 0.5, 0.3]\n",
    "tabla"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "db4146e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.032"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RE_cómputo = (tabla['Probabilidad'] * tabla['Rendimiento de cómputo']).sum()\n",
    "RE_cómputo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1bc8b47c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.043000000000000003"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RE_telecomunicaciones = (tabla['Probabilidad'] * tabla['Rendimiento activo telecomunicaciones']).sum()\n",
    "RE_telecomunicaciones"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "340d2967",
   "metadata": {},
   "source": [
    "**Ejercicio 2.** Con base en la siguiente distribución de rendimientos para el activo A, calcular la desviación estándar."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "68cf0321",
   "metadata": {},
   "source": [
    "| Probabilidad | Rendimiento |\n",
    "| ------------ | ----------- |\n",
    "| 0.3          | 0.10        |\n",
    "| 0.4          | 0.05        |\n",
    "| 0.3          | 0.30        |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c50d0c27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Probabilidad</th>\n",
       "      <th>Rendimiento</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.3</td>\n",
       "      <td>0.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.4</td>\n",
       "      <td>0.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.3</td>\n",
       "      <td>0.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Probabilidad  Rendimiento\n",
       "0           0.3         0.10\n",
       "1           0.4         0.05\n",
       "2           0.3         0.30"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tabla2 = pd.DataFrame(columns=['Probabilidad','Rendimiento'])\n",
    "tabla2 ['Probabilidad']=[0.3, 0.4, 0.3]\n",
    "tabla2 ['Rendimiento']=[0.1, 0.05, 0.3]\n",
    "tabla2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "72e2a647",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.14"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RE = (tabla2['Probabilidad'] * tabla2['Rendimiento']).sum()\n",
    "RE"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
